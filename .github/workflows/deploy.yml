name: Deploy to ECS
on:
  workflow_dispatch:
jobs:
  deploy:
    name: Deploy app to AWS
    runs-on: ubuntu-latest
    steps:

      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push images to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ecrrepo
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_PUBLIC: ${{ secrets.JWT_PUBLIC }}
        run: |
          docker build -f php/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:symfony-php .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:symfony-php
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:symfony-php symfony-php
          docker build -f nginx/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:symfony-nginx .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:symfony-nginx

#      - name: Deploy to Amazon ECS service
#        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
#        with:
#          task-definition: task-definition.json
#          service: symfony-rest-service
#          cluster: SymfonyCluster
